# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Facility {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  facilityImage: String!
  facilityName: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Cafe {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  cafeImage: String!
  cafeName: String!
  cafeAddress: String!
  cafeTime: String!
  cafeNote: String!
  cafeLat: Float!
  cafeLon: Float!
  cafePhone: String!
  cafeSeatCount: Int!
  facility: [Facility!]!
}

type CashTable {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  cashName: String!
  cashPrice: Int!
  cashTime: Int!
}

type Coupon {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  couponName: String!
  couponSale: Int!
  couponCode: Int!
  user: [User!]!
}

type Todo {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  content: String!
}

type User {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  userImage: String
  userName: String!
  userNickname: String!
  userPhone: String!
  userPassword: String!
  userCash: Int!
  parentPhone: String
  todos: [Todo!]!
  coupon: [Coupon!]!
}

type PointTransaction {
  id: String!
  impUid: String!
  amount: Int!
  status: Status!
  user: User!
  createdAt: DateTime!
}

enum Status {
  PAYMENT
  CANCEL
}

type Query {
  fetchUsers: [User!]!
  fetchUserByPhone(phone: String!): User!
  fetchCafes: [Cafe!]!
  fetchCoupons: [Coupon!]!
  fetchFacilities: [Facility!]!
  fetchCashTables: [CashTable!]!
  fetchTodosByUserId(id: String!): Todo!
}

type Mutation {
  signUp(input: CreateUserDto!): String!
  deleteUser(id: String!): String!
  updateUser(input: UpdateUserDto!): User!
  createTodo(id: String!, input: CreateTodosDto!): User!
  userGetCoupon(id: String!, code: Float!): String!
  createCafe(input: CreateCafesDto!): String!
  addFacility(cafeId: String!, facilityId: String!): String!
  updateCafe(input: UpdateCafesDto!): String!
  deleteCafe(id: String!): String!
  createCoupon(input: CreateCouponDto!): String!
  createFacility(input: CreateFacilityDto!): String!
  createCashTable(input: CreateCashTableDto!): String!
  createPointTransaction(impUid: String!, amount: Int!): PointTransaction!
  uploadFile(file: Upload!): String!
  login(phone: String!, password: String!): String!
  restoreAccessToken: String!
}

input CreateUserDto {
  userName: String!
  userNickname: String!
  userPhone: String!
  userPassword: String!
}

input UpdateUserDto {
  userName: String
  userNickname: String
  userPhone: String
  userPassword: String
  id: String!
}

input CreateTodosDto {
  content: String!
}

input CreateCafesDto {
  cafeImage: String!
  cafeName: String!
  cafeAddress: String!
  cafeTime: String!
  cafeNote: String!
  cafeLat: Float!
  cafeLon: Float!
  cafePhone: String!
  cafeSeatCount: Int!
}

input UpdateCafesDto {
  cafeImage: String
  cafeName: String
  cafeAddress: String
  cafeTime: String
  cafeNote: String
  cafeLat: Float
  cafeLon: Float
  cafePhone: String
  cafeSeatCount: Int
  id: String!
}

input CreateCouponDto {
  couponName: String!
  couponSale: Int!
  couponCode: Int!
}

input CreateFacilityDto {
  facilityImage: String!
  facilityName: String!
}

input CreateCashTableDto {
  cashName: String!
  cashPrice: Int!
  cashTime: Int!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload